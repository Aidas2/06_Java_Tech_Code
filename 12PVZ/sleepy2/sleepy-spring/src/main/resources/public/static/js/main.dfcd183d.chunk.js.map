{"version":3,"sources":["components/CountryList/img/lithuania.jpg","serviceWorker.js","components/Navigation/NoMatch.js","UserContext.js","components/Navigation/NavigationComponent.js","components/CountryList/CountryCardComponent.js","components/CountryList/CountryListContainer.js","components/CountryAdministration/CountryAdministrationComponent.js","components/CountryAdministration/CountryAdministrationContainer.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","NoMatch","props","react_default","a","createElement","onClick","history","push","UserContext","React","createContext","NavigationComponent","Link","to","concat","src_UserContext","Consumer","suteikiuPavadinima","children","CountryCardComponent","className","style","width","src","pic","alt","title","description","price","quantity","href","CountryListContainer","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","countrys","loading","_this2","axios","get","then","response","setState","data","console","log","catch","error","countryCards","map","country","index","CountryList_CountryCardComponent","key","id","image","Component","CountryAdministrationComponet","fromMenu","htmlFor","type","placeholder","required","onChange","handleChangeOfTitle","handleChangeOfImageUrl","handleChangeOfDescription","handleChangeOfPrice","handleChangeOfQuantity","handleSubmit","CountryAdministrationContainer","event","target","value","preventDefault","post","pathname","pathnameArray","split","number","length","CountryAdministrationComponent","DemonstruotiNavigacija","JSON","stringify","ReactDOM","render","BrowserRouter","Provider","Navigation_NavigationComponent","Switch","Route","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dfcd183d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/lithuania.b5571683.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nvar NoMatch = (props) => {\n    var goApp = () => props.history.push(\"/\");\n    return <div>Route did not match\n    <button onClick={goApp}>Go To Home Page</button></div>;\n};\n\nexport default NoMatch;\n","import React from 'react';\n\nconst UserContext = React.createContext(null);\n\nexport default UserContext;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport UserContext from '../../UserContext';\n\nvar NavigationComponent = (props) => {\n    return (\n\n        <div>\n            <div>\n                <Link to='/'>Home</Link> |&nbsp;\n                   <Link to='/countrys'>Countrys</Link> |&nbsp;\n                   <Link to={`/countrys/${1}`}>Country by no</Link> |&nbsp;\n                   <Link to='/admin/countrys/new'>Enter new country</Link> |&nbsp;\n                   <Link to={`/admin/countrys/${1}`}>Edit country</Link> |&nbsp;\n                   <Link to='/help'>Help</Link> |&nbsp;\n                   <Link to='/non-existant'>Non Existant</Link> |&nbsp;\n                <UserContext.Consumer>\n                    {(suteikiuPavadinima) => <span>{suteikiuPavadinima}</span>}\n                </UserContext.Consumer>\n            </div>\n            {props.children}\n        </div>);\n\n};\n\nexport default NavigationComponent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport pic from './img/lithuania.jpg';\n\nconst CountryCardComponent = (props) => {\n    return (\n        <div className=\"card\" style={{ width: \"18rem\" }}>\n            <img className=\"card-img-top\" src={pic} alt=\"FlagOfTheCountry\"></img>\n            <div className=\"card-body\">\n                <h5 className=\"card-title\">{props.title}</h5>\n                <p className=\"card-text\">{props.description}</p>\n                <p className=\"card-text\">Prezidentas: {props.price} .</p>\n                <p className=\"card-text\">Sventes data: {props.quantity} .</p>\n                <a href=\"#\" className=\"btn btn-primary\">Country details</a>\n            </div>\n        </div>\n        );\n}\n\n\nCountryCardComponent.propTypes = {\n    id:PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    quantity: PropTypes.number.isRequired\n};\n\n\nexport default CountryCardComponent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CountryCardComponent from './CountryCardComponent';\n//import MyProvider from '../App';\nimport axios from 'axios';\n\nclass CountryListContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { countrys: '',\n                        loading: 'Loading countrys. Please wait...'  };\n    }\n\n    componentDidMount() {\n\taxios.get('http://localhost:8080/countrys')\n            .then((response) => {\n                this.setState({ countrys: response.data });\n                console.log(response.data);\n                console.log(\"Valstybes yra - \" + this.state.countrys);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }\n\n    render() {\n        if (this.state.countrys) {\n            const countryCards = this.state.countrys.map((country, index) => {\n                return (\n                    <CountryCardComponent\n                        key={index}\n                        id={country.id}\n                        title={country.title}\n                        image={country.image}\n                        description={country.description}\n                        price={country.price}\n                        quantity={country.quantity}\n                    />\n                );\n            });\n            return (<div className=\"row\">{countryCards}</div>);\n        }\n        return this.state.loading;\n    }\n\n}\n\nexport default CountryListContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CountryAdministrationComponet = (props) => {\n\n    return (\n        <form >\n            <div className=\"form-row\">\n                <div className=\"col-md-12 mb-12\">\n                    <p>{props.fromMenu}</p>\n                </div>\n            </div>\n            <div className=\"form-row\">\n                <div className=\"col-md-4 mb-3\">\n                    <label htmlFor=\"validationDefault01\">Country title</label>\n                    <input type=\"text\" className=\"form-control\" id=\"validationDefault01\" placeholder=\"Country title\" required onChange={props.handleChangeOfTitle}></input>\n                </div>\n                <div className=\"col-md-4 mb-3\">\n                    <label htmlFor=\"validationDefault02\">Image URL</label>\n                    <input type=\"text\" className=\"form-control\" id=\"validationDefault02\" placeholder=\"Image URL\" required onChange={props.handleChangeOfImageUrl}></input>\n                </div>\n            </div>\n            <div className=\"form-row\">\n                <div className=\"col-md-8 mb-3\">\n                    <label htmlFor=\"validationDefault03\">Description</label>\n                    <input type=\"text\" className=\"form-control\" id=\"validationDefault03\" placeholder=\"Description\" required onChange={props.handleChangeOfDescription}></input>\n                </div>\n            </div>\n            <div className=\"form-row\">\n                <div className=\"col-md-4 mb-3\">\n                    <label htmlFor=\"validationDefault04\">Prezidentas</label>\n                    <input type=\"text\" className=\"form-control\" id=\"validationDefault04\" placeholder=\"Price\" required onChange={props.handleChangeOfPrice}></input>\n                </div>\n                <div className=\"col-md-4 mb-3\">\n                    <label htmlFor=\"validationDefault05\">Sventes data</label>\n                    <input type=\"text\" className=\"form-control\" id=\"validationDefault05\" placeholder=\"Quantity\" required onChange={props.handleChangeOfQuantity}></input>\n                </div>\n            </div>\n            <button className=\"btn btn-primary\" type=\"submit\" onClick={props.handleSubmit}>Save</button>\n        </form>\n    );\n}\n\nexport default CountryAdministrationComponet;\n","import React from 'react';\nimport CountryAdministrationComponent from './CountryAdministrationComponent';\n//import {countryList} from '../App';\nimport axios from 'axios';\n\n\n\nclass CountryAdministrationContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      description: '',\n      id: '',\n      image: '',\n      price: 0,\n      quantity: 0,\n      title: ''\n    };\n    //var fromMenu;\n  }\n\n  handleChangeOfTitle = (event) => {\n    this.setState({ title: event.target.value });\n  }\n\n  handleChangeOfImageUrl = (event) => {\n    this.setState({ image: event.target.value });\n  }\n\n  handleChangeOfDescription = (event) => {\n    this.setState({ description: event.target.value });\n  }\n\n  handleChangeOfPrice = (event) => {\n    this.setState({ price: event.target.value });\n  }\n\n  handleChangeOfQuantity = (event) => {\n    this.setState({ quantity: event.target.value });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(this.state);\n\taxios.post('http://localhost:8080/countrys', this.state)\n      .then(function (response) {\n        console.log(response);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n  }\n\n  componentDidMount() {\n\n    //console.log(this.props.history.location.pathname);\n  }\n\n\n  render() {\n    if (this.props.history.location.pathname === \"/admin/countrys/new\") {\n      this.fromMenu = \"Kuriamas naujas produktas\";\n    } else {\n      var pathnameArray = this.props.history.location.pathname.split('/');\n      if (pathnameArray[1] === \"admin\" && pathnameArray[2] === \"countrys\") {\n        var number = pathnameArray[pathnameArray.length - 1];\n        this.fromMenu = \"Atnaujinamas produktas id: \" + number;\n      }\n    }\n    //console.log(this.props.history);\n\n    return (\n      <CountryAdministrationComponent handleChangeOfTitle={this.handleChangeOfTitle}\n        handleChangeOfImageUrl={this.handleChangeOfImageUrl}\n        handleChangeOfDescription={this.handleChangeOfDescription}\n        handleChangeOfPrice={this.handleChangeOfPrice}\n        handleChangeOfQuantity={this.handleChangeOfQuantity}\n        handleSubmit={this.handleSubmit}\n        fromMenu={this.fromMenu}\n      />\n    );\n  }\n}\n\nexport default CountryAdministrationContainer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { Switch, Redirect, Route } from 'react-router';\nimport { BrowserRouter, Link } from 'react-router-dom';\nimport NoMatch from './components/Navigation/NoMatch';\nimport NavigationComponent from './components/Navigation/NavigationComponent';\nimport CountryListContainer from './components/CountryList/CountryListContainer';\nimport CountryAdministrationContainer from './components/CountryAdministration/CountryAdministrationContainer';\nimport UserContext from './UserContext';\n\nvar DemonstruotiNavigacija = (props) => {\n    var goHome = () => props.history.push(\"/\");\n    return (\n        <div>          \n            At route: {props.location.pathname}\n            <button onClick={goHome}>Go Home</button>\n            <pre>             \n                {JSON.stringify(props, null, 1)}\n                {/*{JSON.stringify(props, null, 2)}*/}\n            </pre>\n        </div>\n    );\n};\n\n\nReactDOM.render((\n    <BrowserRouter>\n        <UserContext.Provider value={\"User: sleepy\"}>\n            <NavigationComponent>\n                <Switch>\n                    <Route exact path='/' component={CountryListContainer} />\n                    <Route exact path=\"/countrys/:id\" component={DemonstruotiNavigacija} />\n                    <Route exact path=\"/countrys\" component={CountryListContainer} />\n                    <Route exact path=\"/admin/countrys/:id\" component={CountryAdministrationContainer} />\n                    <Route exact path=\"/admin/countrys/new\" component={CountryAdministrationContainer} />\n                    <Route exact path=\"/help\" component={DemonstruotiNavigacija} />\n                    <Route path=\"*\" component={NoMatch} />\n                    <Route component={NoMatch} />\n                </Switch>\n            </NavigationComponent>\n        </UserContext.Provider>\n    </BrowserRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}