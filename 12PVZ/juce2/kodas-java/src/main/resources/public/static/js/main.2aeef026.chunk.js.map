{"version":3,"sources":["images/no_picture.png","images/no_img.svg","components/Studio/Studio.js","components/Button.js","components/Studio/StudioForm.js","components/Studio/StudioContainer.js","components/navigation/Navigation.js","components/Performer/Performer.js","components/Studio/StudioCard.js","components/Studio/StudioDetails.js","components/Performer/PerformerForm.js","components/Performer/PerformerContainer.js","components/Studio/StudioUpdateForm.js","components/navigation/NavigationContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Studio","props","react_default","a","createElement","scope","index","title","category","size","height","width","src","logo","alt","className","children","Button","type","onClick","action","StudioForm","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","defineProperty","target","name","value","handleSubmit","preventDefault","Axios","post","state","then","res","console","log","history","go","catch","err","_this2","onSubmit","e","placeholder","onChange","required","id","defaultValue","disabled","step","Component","StudioContainer","getAllData","get","data","studios","onDeleteClickHandler","delete","onDetailsClickHandler","push","showAllData","map","s","img","NoPicture","components_Studio_Studio","assign","key","components_Button","Studio_StudioForm","Navigation","NavLink","to","Performer","firstName","lastName","genre","country","dob","picture","StudioCard","style","StudioDetails","getAllPerformers","match","params","performers","onClickGoBackHandler","goBack","onClickUpdateHandler","service","NoImg","components_Performer_Performer","studio","Studio_StudioCard","PerformerForm","Date","PerformerContainer","componentDidMount","Performer_PerformerForm","StudioUpdateForm","put","availablePerformance","prov","onClickAddPerformer","performer","hidden","NavigationContainer","BrowserRouter","components_navigation_Navigation","Switch","Route","path","exact","component","App","navigation_NavigationContainer","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yRCiBzBC,EAfA,SAAAC,GACb,OACEC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIC,MAAM,OAAOJ,EAAMK,OACvBJ,EAAAC,EAAAC,cAAA,UAAKH,EAAMM,OACXL,EAAAC,EAAAC,cAAA,UAAKH,EAAMO,UACXN,EAAAC,EAAAC,cAAA,UAAKH,EAAMQ,MACXP,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,OAAKM,OAAO,QAAQC,MAAM,QAAQC,IAAKX,EAAMY,KAAMC,IAAKb,EAAMM,SAEhEL,EAAAC,EAAAC,cAAA,MAAIW,UAAU,kCAAkCd,EAAMe,YCE7CC,EAZA,SAAAhB,GACb,OACEC,EAAAC,EAAAC,cAAA,UACEc,KAAK,SACLC,QAASlB,EAAMmB,OACfL,UAAW,OAASd,EAAMiB,MAEzBjB,EAAMM,gBCuFEc,cA5Fb,SAAAA,EAAYpB,GAAO,IAAAqB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACjBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMxB,KASR4B,aAAe,SAAAC,GAEbR,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GAAiBO,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,SAZjCb,EAenBc,aAAe,SAAAN,GACbA,EAAMO,iBAENC,IAAMC,KAAK,+CAAgDjB,EAAKkB,OAC7DC,KAAK,SAAAC,GACJC,QAAQC,IAAItB,EAAKrB,MAAM4C,SACvBvB,EAAKrB,MAAM4C,QAAQC,GAAG,OAEvBC,MAAM,SAAAC,GAAG,OAAIL,QAAQC,IAAII,MArB5B1B,EAAKkB,MAAQ,CACXjC,MAAO,GACPM,KAAM,GACNL,SAAU,GACVC,KAAM,GANSa,wEA0BV,IAAA2B,EAAAxB,KACP,OACEvB,EAAAC,EAAAC,cAAA,OAAKW,UAAU,4BACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,iBAAf,4BACAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,cACbb,EAAAC,EAAAC,cAAA,QAAMW,UAAU,cAAcmC,SAAU,SAAAC,GAAC,OAAIF,EAAKb,aAAae,KAC7DjD,EAAAC,EAAAC,cAAA,OAAKW,UAAU,mBACbb,EAAAC,EAAAC,cAAA,SACEc,KAAK,OACLkC,YAAY,QACZrC,UAAU,eACVmB,KAAK,QACLmB,SAAU5B,KAAKI,aACfyB,UAAQ,KAGZpD,EAAAC,EAAAC,cAAA,OAAKW,UAAU,mBACbb,EAAAC,EAAAC,cAAA,SACEc,KAAK,OACLkC,YAAY,OACZrC,UAAU,eACVmB,KAAK,OACLmB,SAAU5B,KAAKI,aACfyB,UAAQ,KAGZpD,EAAAC,EAAAC,cAAA,OAAKW,UAAU,mBACbb,EAAAC,EAAAC,cAAA,UACEkD,UAAQ,EACRC,GAAG,yBACHH,YAAY,WACZrC,UAAU,eACVmB,KAAK,WACLmB,SAAU5B,KAAKI,cAEf3B,EAAAC,EAAAC,cAAA,UAAQoD,cAAY,EAACC,UAAQ,GAA7B,eAGAvD,EAAAC,EAAAC,cAAA,UAAQ+B,MAAM,YAAd,YACAjC,EAAAC,EAAAC,cAAA,UAAQ+B,MAAM,QAAd,QACAjC,EAAAC,EAAAC,cAAA,UAAQ+B,MAAM,QAAd,UAGJjC,EAAAC,EAAAC,cAAA,OAAKW,UAAU,mBACbb,EAAAC,EAAAC,cAAA,SACEc,KAAK,SACLwC,KAAK,OACLN,YAAY,OACZrC,UAAU,eACVmB,KAAK,OACLmB,SAAU5B,KAAKI,aACfyB,UAAQ,KAGZpD,EAAAC,EAAAC,cAAA,OAAKW,UAAU,mBACbb,EAAAC,EAAAC,cAAA,UAAQW,UAAU,kBAAkBG,KAAK,UAAzC,mBAlFWyC,8BCkHVC,cA7Gb,SAAAA,EAAY3D,GAAO,IAAAqB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmC,IACjBtC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqC,GAAAhC,KAAAH,KAAMxB,KAIR4D,WAAa,WACXvB,IAAMwB,IAAI,gDACPrB,KAAK,SAAAC,GACJC,QAAQC,IAAIF,EAAIqB,MAChBzC,EAAKS,SAAS,CAAEiC,QAAStB,EAAIqB,SAE9BhB,MAAM,SAAAC,GACLL,QAAQC,IAAII,MAZC1B,EAgBnB2C,qBAAuB,SAAA1D,GACrB+B,IAAM4B,OAAO,gDAAkD3D,GAC5DkC,KAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZpB,EAAKuC,eAENd,MAAM,SAAAC,GACLL,QAAQC,IAAII,MAvBC1B,EA2BnB6C,sBAAwB,SAAA5D,GACtBe,EAAKrB,MAAM4C,QAAQuB,KAAK,YAAc7D,IA5BrBe,EA+BnB+C,YAAc,WA6CZ,OA5CW/C,EAAKkB,MAAMwB,QAAQM,IAAI,SAACC,EAAGjE,GACpC,IACIkE,EAMJ,OAJEA,EADa,SAAXD,EAAE1D,MAA6B,OAAV0D,EAAE3B,IACnB6B,IAEAF,EAAE1D,KAEF0D,EAAE/D,UACR,KAAK,EACQ,WACX,MACF,KAAK,EACQ,OACX,MACF,KAAK,EACQ,OAKf,OACEN,EAAAC,EAAAC,cAACsE,EAADnD,OAAAoD,OAAA,CACEC,IAAKL,EAAEhE,MACPD,MAAOA,EAAQ,EACfC,MAAOgE,EAAEhE,MACTC,SAAU+D,EAAE/D,SACZC,KAAM8D,EAAE9D,KACRI,KAAM2D,GACFlD,EAAKrB,OAETC,EAAAC,EAAAC,cAACyE,EAAD,CACEtE,MAAM,UACNa,OAAQ,kBAAME,EAAK6C,sBAAsBI,EAAEhE,QAC3CW,KAAK,gBAEPhB,EAAAC,EAAAC,cAACyE,EAAD,CACEtE,MAAM,SACNa,OAAQ,kBAAME,EAAK2C,qBAAqBM,EAAEhE,QAC1CW,KAAK,oBArEbI,EAAKkB,MAAQ,CAAEwB,QAAS,IAFP1C,mFAgFjBG,KAAKoC,8CAIL,OACE3D,EAAAC,EAAAC,cAAA,OAAKW,UAAU,aACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,OACbb,EAAAC,EAAAC,cAAC0E,EAAerD,KAAKxB,QAEvBC,EAAAC,EAAAC,cAAA,OAAKW,UAAU,OACbb,EAAAC,EAAAC,cAAA,SAAOW,UAAU,kCACfb,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIC,MAAM,OAAV,KACAH,EAAAC,EAAAC,cAAA,MAAIC,MAAM,OAAV,SACAH,EAAAC,EAAAC,cAAA,MAAIC,MAAM,OAAV,YACAH,EAAAC,EAAAC,cAAA,MAAIC,MAAM,OAAV,QACAH,EAAAC,EAAAC,cAAA,MAAIC,MAAM,OAAV,WACAH,EAAAC,EAAAC,cAAA,MAAIC,MAAM,OAAV,aAGJH,EAAAC,EAAAC,cAAA,aAAQqB,KAAK4C,yBAtGKV,qBCiBfoB,SAnBI,WACjB,OACE7E,EAAAC,EAAAC,cAAA,OAAKW,UAAU,cACbb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,iBACZb,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAASC,GAAG,KACV/E,EAAAC,EAAAC,cAAA,+BAGJF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAASC,GAAG,eACV/E,EAAAC,EAAAC,cAAA,8BCSG8E,EAvBG,SAAAjF,GAChB,OACEC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIC,MAAM,OAAOJ,EAAMK,OACvBJ,EAAAC,EAAAC,cAAA,UAAKH,EAAMM,OACXL,EAAAC,EAAAC,cAAA,UAAKH,EAAMkF,WACXjF,EAAAC,EAAAC,cAAA,UAAKH,EAAMmF,UACXlF,EAAAC,EAAAC,cAAA,UAAKH,EAAMoF,OACXnF,EAAAC,EAAAC,cAAA,UAAKH,EAAMqF,SACXpF,EAAAC,EAAAC,cAAA,UAAKH,EAAMsF,KACXrF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,OACEM,OAAO,QACPC,MAAM,QACNC,IAAKX,EAAMuF,QACX1E,IAAKb,EAAMM,SAGfL,EAAAC,EAAAC,cAAA,MAAIW,UAAU,kCAAkCd,EAAMe,YCF7CyE,EAhBI,SAAAxF,GACjB,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKW,UAAU,+BAA+B2E,MAAO,CAAE/E,MAAO,UAC5DT,EAAAC,EAAAC,cAAA,OAAKW,UAAU,eAAeH,IAAKX,EAAMY,KAAMC,IAAKb,EAAMM,QAC1DL,EAAAC,EAAAC,cAAA,OAAKW,UAAU,aACbb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,cAAcd,EAAMM,OAClCL,EAAAC,EAAAC,cAAA,KAAGW,UAAU,aAAad,EAAMO,UAChCN,EAAAC,EAAAC,cAAA,KAAGW,UAAU,aAAad,EAAMQ,MAChCP,EAAAC,EAAAC,cAAA,OAAKW,UAAU,kCAAkCd,EAAMe,+BC8JlD2E,cA/Jb,SAAAA,EAAY1F,GAAO,IAAAqB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkE,IACjBrE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoE,GAAA/D,KAAAH,KAAMxB,KAoBR2F,iBAAmB,WACjBtD,IAAMwB,IACJ,gDACExC,EAAKrB,MAAM4F,MAAMC,OAAOvF,MACxB,mBAEDkC,KAAK,SAAAC,GACJC,QAAQC,IAAIF,EAAIqB,MAChBzC,EAAKS,SAAS,CAAEgE,WAAYrD,EAAIqB,SAEjChB,MAAM,SAAAC,GACLL,QAAQC,IAAII,MAhCC1B,EAoCnB0E,qBAAuB,WACrB1E,EAAKrB,MAAM4C,QAAQoD,UArCF3E,EAwCnB4E,qBAAuB,WACrB5E,EAAKrB,MAAM4C,QAAQuB,KAAK,mBAAqB9C,EAAKrB,MAAM4F,MAAMC,OAAOvF,QAzCpDe,EA4CnB2C,qBAAuB,SAAA1D,GACrB+B,IAAM4B,OACJ,gDACE5C,EAAKkB,MAAM2D,QAAQ5F,MACnB,IACAA,GAEDkC,KAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZpB,EAAKsE,qBAEN7C,MAAM,SAAAC,GACLL,QAAQC,IAAII,MAxDC1B,EA4DnB+C,YAAc,WA6BZ,OA5BW/C,EAAKkB,MAAMuD,WAAWzB,IAAI,SAACvE,EAAGO,GACvC,IAAIkE,EAMJ,OAJEA,EADgB,SAAdzE,EAAEyF,SAAoC,OAAdzF,EAAEyF,QACtBY,IAEArG,EAAEyF,QAGRtF,EAAAC,EAAAC,cAACiG,EAAD9E,OAAAoD,OAAA,CACEC,IAAK7E,EAAEQ,MACPD,MAAOA,EAAQ,EACfC,MAAOR,EAAEQ,MACT4E,UAAWpF,EAAEoF,UACbC,SAAUrF,EAAEqF,SACZC,MAAOtF,EAAEsF,MACTC,QAASvF,EAAEuF,QACXC,IAAKxF,EAAEwF,IACPC,QAAShB,GACLlD,EAAKrB,OAETC,EAAAC,EAAAC,cAACyE,EAAD,CACEtE,MAAM,SACNa,OAAQ,kBAAME,EAAK2C,qBAAqBlE,EAAEQ,QAC1CW,KAAK,oBAlFbI,EAAKkB,MAAQ,CAAE8D,OAAQ,GAAIP,WAAY,IAFtBzE,mFAKC,IAAA2B,EAAAxB,KAClBa,IAAMwB,IACJ,gDACErC,KAAKxB,MAAM4F,MAAMC,OAAOvF,OAEzBkC,KAAK,SAAAC,GACJC,QAAQC,IAAIF,EAAIqB,MAChBd,EAAKlB,SAAS,CAAEuE,OAAQ5D,EAAIqB,SAE7BhB,MAAM,SAAAC,GACLL,QAAQC,IAAII,KAGhBvB,KAAKmE,oDA2EL,IAAIpB,EAOAhE,EACJ,OANEgE,EAD6B,SAA3B/C,KAAKe,MAAM8D,OAAOzF,MAA8C,OAA3BY,KAAKe,MAAM8D,OAAOzF,KACnDuF,IAEA3E,KAAKe,MAAM8D,OAAOzF,KAIlBY,KAAKe,MAAM8D,OAAO9F,UACxB,KAAK,EACHA,EAAW,WACX,MACF,KAAK,EACHA,EAAW,OACX,MACF,KAAK,EACHA,EAAW,OAMf,OACEN,EAAAC,EAAAC,cAAA,OAAKW,UAAU,kBACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,qCACbb,EAAAC,EAAAC,cAACmG,EAAD,CACEhG,MAAOkB,KAAKe,MAAM8D,OAAO/F,MACzBC,SAAUA,EACVC,KAAMgB,KAAKe,MAAM8D,OAAO7F,KACxBI,KAAM2D,GAENtE,EAAAC,EAAAC,cAACyE,EAAD,CACEtE,MAAM,UACNW,KAAK,cACLE,OAAQK,KAAKuE,uBAEf9F,EAAAC,EAAAC,cAACyE,EAAD,CACEtE,MAAM,SACNW,KAAK,cACLE,OAAQK,KAAKyE,yBAInBhG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAOW,UAAU,kCACfb,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIC,MAAM,OAAV,KACAH,EAAAC,EAAAC,cAAA,MAAIC,MAAM,OAAV,SACAH,EAAAC,EAAAC,cAAA,MAAIC,MAAM,OAAV,cACAH,EAAAC,EAAAC,cAAA,MAAIC,MAAM,OAAV,aACAH,EAAAC,EAAAC,cAAA,MAAIC,MAAM,OAAV,SACAH,EAAAC,EAAAC,cAAA,MAAIC,MAAM,OAAV,WACAH,EAAAC,EAAAC,cAAA,MAAIC,MAAM,OAAV,OACAH,EAAAC,EAAAC,cAAA,MAAIC,MAAM,OAAV,WACAH,EAAAC,EAAAC,cAAA,MAAIC,MAAM,OAAV,aAGJH,EAAAC,EAAAC,cAAA,aAAQqB,KAAK4C,yBAxJGV,aCsHb6C,cA3Hb,SAAAA,EAAYvG,GAAO,IAAAqB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+E,IACjBlF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiF,GAAA5E,KAAAH,KAAMxB,KAYR4B,aAAe,SAAAC,GAEbR,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GAAiBO,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,SAfjCb,EAkBnBc,aAAe,SAAAN,GACbA,EAAMO,iBACNM,QAAQC,IAAItB,EAAKkB,OACjBF,IAAMC,KAAK,kDAAmDjB,EAAKkB,OAChEC,KAAK,SAAAC,GACJC,QAAQC,IAAItB,EAAKrB,MAAM4C,SACvBvB,EAAKrB,MAAM4C,QAAQC,GAAG,iBAEvBC,MAAM,SAAAC,GAAG,OAAIL,QAAQC,IAAII,MAxB5B1B,EAAKkB,MAAQ,CACXjC,MAAO,GACP4E,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,QAAS,GACTC,IAAK,IAAIkB,KACTjB,QAAS,IATMlE,wEA+BV,IAAA2B,EAAAxB,KACP,OACEvB,EAAAC,EAAAC,cAAA,OAAKW,UAAU,4BACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,iBAAf,wBACAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,cACbb,EAAAC,EAAAC,cAAA,QAAMW,UAAU,cAAcmC,SAAU,SAAAC,GAAC,OAAIF,EAAKb,aAAae,KAC7DjD,EAAAC,EAAAC,cAAA,OAAKW,UAAU,mBACbb,EAAAC,EAAAC,cAAA,SACEc,KAAK,OACLkC,YAAY,QACZrC,UAAU,eACVmB,KAAK,QACLmB,SAAU5B,KAAKI,aACfyB,UAAQ,KAGZpD,EAAAC,EAAAC,cAAA,OAAKW,UAAU,mBACbb,EAAAC,EAAAC,cAAA,SACEc,KAAK,OACLkC,YAAY,aACZrC,UAAU,eACVmB,KAAK,YACLmB,SAAU5B,KAAKI,aACfyB,UAAQ,KAIZpD,EAAAC,EAAAC,cAAA,OAAKW,UAAU,mBACbb,EAAAC,EAAAC,cAAA,SACEc,KAAK,OACLkC,YAAY,YACZrC,UAAU,eACVmB,KAAK,WACLmB,SAAU5B,KAAKI,aACfyB,UAAQ,KAIZpD,EAAAC,EAAAC,cAAA,OAAKW,UAAU,mBACbb,EAAAC,EAAAC,cAAA,SACEc,KAAK,OACLkC,YAAY,QACZrC,UAAU,eACVmB,KAAK,QACLmB,SAAU5B,KAAKI,aACfyB,UAAQ,KAIZpD,EAAAC,EAAAC,cAAA,OAAKW,UAAU,mBACbb,EAAAC,EAAAC,cAAA,SACEc,KAAK,OACLkC,YAAY,UACZrC,UAAU,eACVmB,KAAK,UACLmB,SAAU5B,KAAKI,aACfyB,UAAQ,KAIZpD,EAAAC,EAAAC,cAAA,OAAKW,UAAU,mBACbb,EAAAC,EAAAC,cAAA,SACEc,KAAK,OACLkC,YAAY,UACZrC,UAAU,eACVmB,KAAK,UACLmB,SAAU5B,KAAKI,gBAInB3B,EAAAC,EAAAC,cAAA,OAAKW,UAAU,mBACbb,EAAAC,EAAAC,cAAA,SACEc,KAAK,OACLkC,YAAY,MACZrC,UAAU,eACVmB,KAAK,MACLmB,SAAU5B,KAAKI,gBAInB3B,EAAAC,EAAAC,cAAA,OAAKW,UAAU,mBACbb,EAAAC,EAAAC,cAAA,UAAQW,UAAU,kBAAkBG,KAAK,UAAzC,mBAjHcyC,aC2Fb+C,cAvFb,SAAAA,EAAYzG,GAAO,IAAAqB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiF,IACjBpF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmF,GAAA9E,KAAAH,KAAMxB,KAIR4D,WAAa,WACXvB,IAAMwB,IAAI,mDACPrB,KAAK,SAAAC,GAEJpB,EAAKS,SAAS,CAAEgE,WAAYrD,EAAIqB,SAEjChB,MAAM,SAAAC,GACLL,QAAQC,IAAII,MAZC1B,EAgBnB2C,qBAAuB,SAAA1D,GACrBoC,QAAQC,IAAIrC,GACZ+B,IAAM4B,OAAO,mDAAqD3D,GAC/DkC,KAAK,SAAAC,GACJC,QAAQC,IAAI,aAAerC,GAC3Be,EAAKuC,eAENd,MAAM,SAAAC,GACLL,QAAQC,IAAII,MAxBC1B,EA4BnB+C,YAAc,WAuBZ,OAtBW/C,EAAKkB,MAAMuD,WAAWzB,IAAI,SAACvE,EAAGO,GACvC,OACEJ,EAAAC,EAAAC,cAACiG,EAAD9E,OAAAoD,OAAA,CACEC,IAAK7E,EAAEQ,MACPD,MAAOA,EAAQ,EACfC,MAAOR,EAAEQ,MACT4E,UAAWpF,EAAEoF,UACbC,SAAUrF,EAAEqF,SACZC,MAAOtF,EAAEsF,MACTC,QAASvF,EAAEuF,QACXC,IAAKxF,EAAEwF,IACPC,QAASzF,EAAEyF,SACPlE,EAAKrB,OAETC,EAAAC,EAAAC,cAACyE,EAAD,CACEtE,MAAM,SACNa,OAAQ,kBAAME,EAAK2C,qBAAqBlE,EAAEQ,QAC1CW,KAAK,oBA9CII,EAsDnBqF,kBAAoB,WAClBrF,EAAKuC,cArDLvC,EAAKkB,MAAQ,CAAEuD,WAAY,IAFVzE,wEA2DjB,OACEpB,EAAAC,EAAAC,cAAA,OAAKW,UAAU,aACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,YACbb,EAAAC,EAAAC,cAACwG,EAAkBnF,KAAKxB,QAE1BC,EAAAC,EAAAC,cAAA,OAAKW,UAAU,OACbb,EAAAC,EAAAC,cAAA,SAAOW,UAAU,kCACfb,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIC,MAAM,OAAV,KACAH,EAAAC,EAAAC,cAAA,MAAIC,MAAM,OAAV,SACAH,EAAAC,EAAAC,cAAA,MAAIC,MAAM,OAAV,cACAH,EAAAC,EAAAC,cAAA,MAAIC,MAAM,OAAV,aACAH,EAAAC,EAAAC,cAAA,MAAIC,MAAM,OAAV,SACAH,EAAAC,EAAAC,cAAA,MAAIC,MAAM,OAAV,WACAH,EAAAC,EAAAC,cAAA,MAAIC,MAAM,OAAV,OACAH,EAAAC,EAAAC,cAAA,MAAIC,MAAM,OAAV,WACAH,EAAAC,EAAAC,cAAA,MAAIC,MAAM,OAAV,aAGJH,EAAAC,EAAAC,cAAA,aAAQqB,KAAK4C,yBAhFQV,aCyKlBkD,cA3Kb,SAAAA,EAAY5G,GAAO,IAAAqB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoF,IACjBvF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsF,GAAAjF,KAAAH,KAAMxB,KAWR0G,kBAAoB,WAClBrE,IAAMwB,IACJ,gDACExC,EAAKrB,MAAM4F,MAAMC,OAAOvF,OAEzBkC,KAAK,SAAAC,GACJC,QAAQC,IAAIF,EAAIqB,MAChBzC,EAAKS,SAASW,EAAIqB,QAEnBhB,MAAM,SAAAC,GAAG,OAAIL,QAAQC,IAAII,KAE5BV,IAAMwB,IAAI,mDACPrB,KAAK,SAAAC,GAAG,OAAIpB,EAAKS,SAAS,CAAEgE,WAAYrD,EAAIqB,SAC5ChB,SAzBczB,EA4BnBO,aAAe,SAAAC,GACbR,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GAAiBO,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,SA7BjCb,EAgCnBc,aAAe,SAAAN,GACbA,EAAMO,iBAENC,IAAMwE,IACJ,gDACExF,EAAKrB,MAAM4F,MAAMC,OAAOvF,MAC1Be,EAAKkB,OAEJC,KAAK,SAAAC,GACJpB,EAAKrB,MAAM4C,QAAQoD,WAEpBlD,MAAM,SAAAC,GAAG,OAAIL,QAAQC,IAAII,MA3CX1B,EA8CnB2E,OAAS,WACP3E,EAAKrB,MAAM4C,QAAQoD,UA/CF3E,EAkDnByF,qBAAuB,WAQrB,OAPgBzF,EAAKkB,MAAMuD,WAAWzB,IAAI,SAAA0C,GACxC,OACE9G,EAAAC,EAAAC,cAAA,UAAQwE,IAAKoC,EAAKzG,MAAO4B,MAAO6E,EAAKzG,OAClCyG,EAAKzG,UAtDKe,EA6DnB2F,oBAAsB,WACpB3E,IAAMwE,IACJ,gDACExF,EAAKrB,MAAM4F,MAAMC,OAAOvF,MACxB,IACAe,EAAKkB,MAAM0E,WAEZzE,KAAK,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,KACxBK,MAAM,SAAAC,GAAG,OAAIL,QAAQC,IAAII,MAnE5B1B,EAAKkB,MAAQ,CACXjC,MAAO,GACPM,KAAM,GACNL,SAAU,GACVC,KAAM,EACNsF,WAAY,GACZmB,UAAW,IARI5F,wEAwEV,IAAA2B,EAAAxB,KACP,OACEvB,EAAAC,EAAAC,cAAA,OAAKW,UAAU,4BACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,iBAAf,kBACAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,cACbb,EAAAC,EAAAC,cAAA,QAAMW,UAAU,cAAcmC,SAAU,SAAAC,GAAC,OAAIF,EAAKb,aAAae,KAC7DjD,EAAAC,EAAAC,cAAA,OAAKW,UAAU,mBACbb,EAAAC,EAAAC,cAAA,SACEqD,UAAQ,EACRvC,KAAK,OACLkC,YAAY,QACZrC,UAAU,eACVmB,KAAK,QACLC,MAAOV,KAAKe,MAAMjC,MAClB8C,SAAU5B,KAAKI,aACfyB,UAAQ,KAGZpD,EAAAC,EAAAC,cAAA,OAAKW,UAAU,mBACbb,EAAAC,EAAAC,cAAA,SACEc,KAAK,OACLkC,YAAY,OACZrC,UAAU,eACVmB,KAAK,OACLC,MAAOV,KAAKe,MAAM3B,KAClBwC,SAAU5B,KAAKI,aACfyB,UAAQ,KAGZpD,EAAAC,EAAAC,cAAA,OAAKW,UAAU,mBACbb,EAAAC,EAAAC,cAAA,UACEkD,UAAQ,EACRC,GAAG,yBACHH,YAAY,WACZrC,UAAU,eACVmB,KAAK,WACLC,MAAOV,KAAKe,MAAMhC,SAClB6C,SAAU5B,KAAKI,cAEf3B,EAAAC,EAAAC,cAAA,UAAQoD,cAAY,EAACC,UAAQ,GAA7B,eAGAvD,EAAAC,EAAAC,cAAA,UAAQ+B,MAAM,YAAd,YACAjC,EAAAC,EAAAC,cAAA,UAAQ+B,MAAM,QAAd,QACAjC,EAAAC,EAAAC,cAAA,UAAQ+B,MAAM,QAAd,UAGJjC,EAAAC,EAAAC,cAAA,OAAKW,UAAU,mBACbb,EAAAC,EAAAC,cAAA,SACEc,KAAK,SACLwC,KAAK,OACLN,YAAY,OACZrC,UAAU,eACVmB,KAAK,OACLC,MAAOV,KAAKe,MAAM/B,KAClB4C,SAAU5B,KAAKI,aACfyB,UAAQ,KAGZpD,EAAAC,EAAAC,cAAA,OAAKW,UAAU,mBACbb,EAAAC,EAAAC,cAAA,UAAQW,UAAU,kBAAkBG,KAAK,UAAzC,QAGAhB,EAAAC,EAAAC,cAAA,UACEW,UAAU,uBACVG,KAAK,SACLC,QAAS,kBAAM8B,EAAKgD,WAHtB,WAUN/F,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,OAAKW,UAAU,mBACbb,EAAAC,EAAAC,cAAA,UACEmD,GAAG,yBACHxC,UAAU,eACVmB,KAAK,YACLC,MAAOV,KAAKe,MAAMuD,WAClB1C,SAAU5B,KAAKI,cAEf3B,EAAAC,EAAAC,cAAA,UAAQoD,cAAY,EAAC2D,QAAM,GAA3B,eAGC1F,KAAKsF,wBAER7G,EAAAC,EAAAC,cAAA,UACEW,UAAU,kBACVI,QAAS,kBAAM8B,EAAKgE,wBAFtB,gBAhKqBtD,aC4BhByD,EAtBa,WAC1B,OACElH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiH,EAAA,EAAD,KACEnH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACkH,EAAD,MACApH,EAAAC,EAAAC,cAACmH,EAAA,EAAD,KACErH,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW/D,IACjC1D,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAOC,KAAK,kBAAkBE,UAAWhC,EAAe+B,OAAK,IAC7DxH,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAOC,KAAK,cAAcE,UAAWjB,EAAoBgB,OAAK,IAC9DxH,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CACEC,KAAK,yBACLE,UAAWd,EACXa,OAAK,SCPJE,mLARX,OACE1H,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyH,EAAD,cAJUlE,aCOEmE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASpC,MACvB,2DCZNqC,IAASC,OAAOjI,EAAAC,EAAAC,cAACgI,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhG,KAAK,SAAAiG,GACjCA,EAAaC","file":"static/js/main.2aeef026.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no_picture.6428f3d9.png\";","module.exports = __webpack_public_path__ + \"static/media/no_img.30e52bcb.svg\";","import React from \"react\";\n\nconst Studio = props => {\n  return (\n    <tr>\n      <th scope=\"row\">{props.index}</th>\n      <td>{props.title}</td>\n      <td>{props.category}</td>\n      <td>{props.size}</td>\n      <td>\n        <img height=\"150px\" width=\"200px\" src={props.logo} alt={props.title} />\n      </td>\n      <td className=\"d-flex justify-content-between\">{props.children}</td>\n    </tr>\n  );\n};\n\nexport default Studio;\n","import React from \"react\";\n\nconst Button = props => {\n  return (\n    <button\n      type=\"button\"\n      onClick={props.action}\n      className={\"btn \" + props.type}\n    >\n      {props.title}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { Component } from \"react\";\nimport Axios from \"axios\";\n\nclass StudioForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      logo: \"\",\n      category: \"\",\n      size: 0.0\n    };\n  }\n\n  handleChange = event => {\n    // console.log(\"NAME: \" + event.target.name + \" VALUE: \" + event.target.value);\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    //console.log(this.state);\n    Axios.post(\"http://localhost:8081/kodas-java/api/studios\", this.state)\n      .then(res => {\n        console.log(this.props.history);\n        this.props.history.go(\"/\");\n      })\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <div className=\"panel panel-default my-3\">\n        <div className=\"panel-heading\">Create new Record Studio</div>\n        <div className=\"panel-body\">\n          <form className=\"form-inline\" onSubmit={e => this.handleSubmit(e)}>\n            <div className=\"form-group mb-2\">\n              <input\n                type=\"text\"\n                placeholder=\"Title\"\n                className=\"form-control\"\n                name=\"title\"\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n            <div className=\"form-group mb-2\">\n              <input\n                type=\"text\"\n                placeholder=\"Logo\"\n                className=\"form-control\"\n                name=\"logo\"\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n            <div className=\"form-group mb-2\">\n              <select\n                required\n                id=\"inlineFormCustomSelect\"\n                placeholder=\"Category\"\n                className=\"form-control\"\n                name=\"category\"\n                onChange={this.handleChange}\n              >\n                <option defaultValue disabled>\n                  Category...\n                </option>\n                <option value=\"National\">National</option>\n                <option value=\"Home\">Home</option>\n                <option value=\"Live\">Live</option>\n              </select>\n            </div>\n            <div className=\"form-group mb-2\">\n              <input\n                type=\"number\"\n                step=\"0.01\"\n                placeholder=\"Size\"\n                className=\"form-control\"\n                name=\"size\"\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n            <div className=\"form-group mb-2\">\n              <button className=\"btn btn-success\" type=\"submit\">\n                Save\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default StudioForm;\n","import React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport Studio from \"./Studio\";\nimport Button from \"../Button\";\nimport StudioForm from \"./StudioForm\";\nimport NoPicture from \"../../images/no_img.svg\";\n\nclass StudioContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { studios: [] };\n  }\n\n  getAllData = () => {\n    Axios.get(\"http://localhost:8081/kodas-java/api/studios\")\n      .then(res => {\n        console.log(res.data);\n        this.setState({ studios: res.data });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  onDeleteClickHandler = title => {\n    Axios.delete(\"http://localhost:8081/kodas-java/api/studios/\" + title)\n      .then(res => {\n        console.log(res);\n        this.getAllData();\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  onDetailsClickHandler = title => {\n    this.props.history.push(\"/studios/\" + title);\n  };\n\n  showAllData = () => {\n    let data = this.state.studios.map((s, index) => {\n      let category;\n      let img;\n      if (s.logo === \"null\" || s.log === null) {\n        img = NoPicture;\n      } else {\n        img = s.logo;\n      }\n      switch (s.category) {\n        case 0:\n          category = \"National\";\n          break;\n        case 1:\n          category = \"Home\";\n          break;\n        case 2:\n          category = \"Live\";\n          break;\n        default:\n          break;\n      }\n      return (\n        <Studio\n          key={s.title}\n          index={index + 1}\n          title={s.title}\n          category={s.category}\n          size={s.size}\n          logo={img}\n          {...this.props}\n        >\n          <Button\n            title=\"Details\"\n            action={() => this.onDetailsClickHandler(s.title)}\n            type=\"btn-success\"\n          />\n          <Button\n            title=\"Delete\"\n            action={() => this.onDeleteClickHandler(s.title)}\n            type=\"btn-warning\"\n          />\n        </Studio>\n      );\n    });\n    return data;\n  };\n\n  componentDidMount() {\n    this.getAllData();\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <StudioForm {...this.props} />\n        </div>\n        <div className=\"row\">\n          <table className=\"table table-striped table-dark\">\n            <thead>\n              <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Title</th>\n                <th scope=\"col\">Category</th>\n                <th scope=\"col\">Size</th>\n                <th scope=\"col\">Picture</th>\n                <th scope=\"col\">Actions</th>\n              </tr>\n            </thead>\n            <tbody>{this.showAllData()}</tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default StudioContainer;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport \"./Navigation.css\";\n\nconst Navigation = () => {\n  return (\n    <div className=\"navigation\">\n      <ul className=\"navigation_ul\">\n        <li>\n          <NavLink to=\"/\">\n            <div>Record Studios</div>\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/performers\">\n            <div>Performer</div>\n          </NavLink>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\n\nconst Performer = props => {\n  return (\n    <tr>\n      <th scope=\"row\">{props.index}</th>\n      <td>{props.title}</td>\n      <td>{props.firstName}</td>\n      <td>{props.lastName}</td>\n      <td>{props.genre}</td>\n      <td>{props.country}</td>\n      <td>{props.dob}</td>\n      <td>\n        <img\n          height=\"150px\"\n          width=\"200px\"\n          src={props.picture}\n          alt={props.title}\n        />\n      </td>\n      <td className=\"d-flex justify-content-between\">{props.children}</td>\n    </tr>\n  );\n};\n\nexport default Performer;\n","import React from \"react\";\n\nconst StudioCard = props => {\n  return (\n    <div>\n      <div className=\"card text-white bg-dark mb-3\" style={{ width: \"18rem\" }}>\n        <img className=\"card-img-top\" src={props.logo} alt={props.title} />\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{props.title}</h5>\n          <p className=\"card-text\">{props.category}</p>\n          <p className=\"card-text\">{props.size}</p>\n          <div className=\"d-flex justify-content-between\">{props.children}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StudioCard;\n","import React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport Studio from \"./Studio\";\nimport Button from \"../Button\";\nimport Performer from \"../Performer/Performer\";\nimport StudioCard from \"./StudioCard\";\n\nimport NoImg from \"../../images/no_picture.png\";\n\nclass StudioDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { studio: \"\", performers: [] };\n  }\n\n  componentDidMount() {\n    Axios.get(\n      \"http://localhost:8081/kodas-java/api/studios/\" +\n        this.props.match.params.title\n    )\n      .then(res => {\n        console.log(res.data);\n        this.setState({ studio: res.data });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n\n    this.getAllPerformers();\n  }\n\n  getAllPerformers = () => {\n    Axios.get(\n      \"http://localhost:8081/kodas-java/api/studios/\" +\n        this.props.match.params.title +\n        \"/all-performers\"\n    )\n      .then(res => {\n        console.log(res.data);\n        this.setState({ performers: res.data });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  onClickGoBackHandler = () => {\n    this.props.history.goBack();\n  };\n\n  onClickUpdateHandler = () => {\n    this.props.history.push(\"/studios/update/\" + this.props.match.params.title);\n  };\n\n  onDeleteClickHandler = title => {\n    Axios.delete(\n      \"http://localhost:8081/kodas-java/api/studios/\" +\n        this.state.service.title +\n        \"/\" +\n        title\n    )\n      .then(res => {\n        console.log(res);\n        this.getAllPerformers();\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  showAllData = () => {\n    let data = this.state.performers.map((p, index) => {\n      let img;\n      if (p.picture === \"null\" || p.picture === null) {\n        img = NoImg;\n      } else {\n        img = p.picture;\n      }\n      return (\n        <Performer\n          key={p.title}\n          index={index + 1}\n          title={p.title}\n          firstName={p.firstName}\n          lastName={p.lastName}\n          genre={p.genre}\n          country={p.country}\n          dob={p.dob}\n          picture={img}\n          {...this.props}\n        >\n          <Button\n            title=\"Delete\"\n            action={() => this.onDeleteClickHandler(p.title)}\n            type=\"btn-warning\"\n          />\n        </Performer>\n      );\n    });\n    return data;\n  };\n\n  render() {\n    let img;\n    if (this.state.studio.logo === \"null\" || this.state.studio.logo === null) {\n      img = NoImg;\n    } else {\n      img = this.state.studio.logo;\n    }\n\n    let category;\n    switch (this.state.studio.category) {\n      case 0:\n        category = \"National\";\n        break;\n      case 1:\n        category = \"Home\";\n        break;\n      case 2:\n        category = \"Live\";\n        break;\n      default:\n        break;\n    }\n\n    return (\n      <div className=\"container my-3\">\n        <div className=\"row d-flex justify-content-center\">\n          <StudioCard\n            title={this.state.studio.title}\n            category={category}\n            size={this.state.studio.size}\n            logo={img}\n          >\n            <Button\n              title=\"Go Back\"\n              type=\"btn-warning\"\n              action={this.onClickGoBackHandler}\n            />\n            <Button\n              title=\"Update\"\n              type=\"btn-warning\"\n              action={this.onClickUpdateHandler}\n            />\n          </StudioCard>\n        </div>\n        <div>\n          <table className=\"table table-striped table-dark\">\n            <thead>\n              <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Title</th>\n                <th scope=\"col\">First name</th>\n                <th scope=\"col\">Last name</th>\n                <th scope=\"col\">Genre</th>\n                <th scope=\"col\">Country</th>\n                <th scope=\"col\">DOB</th>\n                <th scope=\"col\">Picture</th>\n                <th scope=\"col\">Actions</th>\n              </tr>\n            </thead>\n            <tbody>{this.showAllData()}</tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default StudioDetails;\n","import React, { Component } from \"react\";\nimport Axios from \"axios\";\n\nclass PerformerForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      genre: \"\",\n      country: \"\",\n      dob: new Date(),\n      picture: \"\"\n    };\n  }\n\n  handleChange = event => {\n    // console.log(\"NAME: \" + event.target.name + \" VALUE: \" + event.target.value);\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    console.log(this.state);\n    Axios.post(\"http://localhost:8081/kodas-java/api/performers\", this.state)\n      .then(res => {\n        console.log(this.props.history);\n        this.props.history.go(\"/performers\");\n      })\n      .catch(err => console.log(err));\n    //let newStudent = {firstname: this.state.firstname, lastname: this.state.lastname, email: this.state.email};\n    //this.props.createStudent(newStudent);\n  };\n\n  render() {\n    return (\n      <div className=\"panel panel-default my-3\">\n        <div className=\"panel-heading\">Create new performer</div>\n        <div className=\"panel-body\">\n          <form className=\"form-inline\" onSubmit={e => this.handleSubmit(e)}>\n            <div className=\"form-group mb-2\">\n              <input\n                type=\"text\"\n                placeholder=\"Title\"\n                className=\"form-control\"\n                name=\"title\"\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n            <div className=\"form-group mb-2\">\n              <input\n                type=\"text\"\n                placeholder=\"First Name\"\n                className=\"form-control\"\n                name=\"firstName\"\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n\n            <div className=\"form-group mb-2\">\n              <input\n                type=\"text\"\n                placeholder=\"Last Name\"\n                className=\"form-control\"\n                name=\"lastName\"\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n\n            <div className=\"form-group mb-2\">\n              <input\n                type=\"text\"\n                placeholder=\"Genre\"\n                className=\"form-control\"\n                name=\"genre\"\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n\n            <div className=\"form-group mb-2\">\n              <input\n                type=\"text\"\n                placeholder=\"Country\"\n                className=\"form-control\"\n                name=\"country\"\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n\n            <div className=\"form-group mb-2\">\n              <input\n                type=\"text\"\n                placeholder=\"Picture\"\n                className=\"form-control\"\n                name=\"picture\"\n                onChange={this.handleChange}\n              />\n            </div>\n\n            <div className=\"form-group mb-2\">\n              <input\n                type=\"date\"\n                placeholder=\"DOB\"\n                className=\"form-control\"\n                name=\"dob\"\n                onChange={this.handleChange}\n              />\n            </div>\n\n            <div className=\"form-group mb-2\">\n              <button className=\"btn btn-success\" type=\"submit\">\n                Save\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PerformerForm;\n","import React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport Button from \"../Button\";\nimport Performer from \"./Performer\";\nimport PerformerForm from \"./PerformerForm\";\n\nclass PerformerContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { performers: [] };\n  }\n\n  getAllData = () => {\n    Axios.get(\"http://localhost:8081/kodas-java/api/performers\")\n      .then(res => {\n        //console.log(res.data);\n        this.setState({ performers: res.data });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  onDeleteClickHandler = title => {\n    console.log(title);\n    Axios.delete(\"http://localhost:8081/kodas-java/api/performers/\" + title)\n      .then(res => {\n        console.log(\"Deleting: \" + title);\n        this.getAllData();\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  showAllData = () => {\n    let data = this.state.performers.map((p, index) => {\n      return (\n        <Performer\n          key={p.title}\n          index={index + 1}\n          title={p.title}\n          firstName={p.firstName}\n          lastName={p.lastName}\n          genre={p.genre}\n          country={p.country}\n          dob={p.dob}\n          picture={p.picture}\n          {...this.props}\n        >\n          <Button\n            title=\"Delete\"\n            action={() => this.onDeleteClickHandler(p.title)}\n            type=\"btn-warning\"\n          />\n        </Performer>\n      );\n    });\n    return data;\n  };\n\n  componentDidMount = () => {\n    this.getAllData();\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row my-3\">\n          <PerformerForm {...this.props} />\n        </div>\n        <div className=\"row\">\n          <table className=\"table table-striped table-dark\">\n            <thead>\n              <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Title</th>\n                <th scope=\"col\">First name</th>\n                <th scope=\"col\">Last name</th>\n                <th scope=\"col\">Genre</th>\n                <th scope=\"col\">Country</th>\n                <th scope=\"col\">DOB</th>\n                <th scope=\"col\">Picture</th>\n                <th scope=\"col\">Actions</th>\n              </tr>\n            </thead>\n            <tbody>{this.showAllData()}</tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PerformerContainer;\n","import React, { Component } from \"react\";\nimport Axios from \"axios\";\n\nclass StudioUpdateForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      logo: \"\",\n      category: \"\",\n      size: 0.0,\n      performers: [],\n      performer: \"\"\n    };\n  }\n\n  componentDidMount = () => {\n    Axios.get(\n      \"http://localhost:8081/kodas-java/api/studios/\" +\n        this.props.match.params.title\n    )\n      .then(res => {\n        console.log(res.data);\n        this.setState(res.data);\n      })\n      .catch(err => console.log(err));\n\n    Axios.get(\"http://localhost:8081/kodas-java/api/performers\")\n      .then(res => this.setState({ performers: res.data }))\n      .catch();\n  };\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    //console.log(this.state);\n    Axios.put(\n      \"http://localhost:8081/kodas-java/api/studios/\" +\n        this.props.match.params.title,\n      this.state\n    )\n      .then(res => {\n        this.props.history.goBack();\n      })\n      .catch(err => console.log(err));\n  };\n\n  goBack = () => {\n    this.props.history.goBack();\n  };\n\n  availablePerformance = () => {\n    let providers = this.state.performers.map(prov => {\n      return (\n        <option key={prov.title} value={prov.title}>\n          {prov.title}\n        </option>\n      );\n    });\n    return providers;\n  };\n\n  onClickAddPerformer = () => {\n    Axios.put(\n      \"http://localhost:8081/kodas-java/api/studios/\" +\n        this.props.match.params.title +\n        \"/\" +\n        this.state.performer\n    )\n      .then(res => console.log(res))\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <div className=\"panel panel-default my-3\">\n        <div className=\"panel-heading\">Update Service</div>\n        <div className=\"panel-body\">\n          <form className=\"form-inline\" onSubmit={e => this.handleSubmit(e)}>\n            <div className=\"form-group mb-2\">\n              <input\n                disabled\n                type=\"text\"\n                placeholder=\"Title\"\n                className=\"form-control\"\n                name=\"title\"\n                value={this.state.title}\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n            <div className=\"form-group mb-2\">\n              <input\n                type=\"text\"\n                placeholder=\"Logo\"\n                className=\"form-control\"\n                name=\"logo\"\n                value={this.state.logo}\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n            <div className=\"form-group mb-2\">\n              <select\n                required\n                id=\"inlineFormCustomSelect\"\n                placeholder=\"Category\"\n                className=\"form-control\"\n                name=\"category\"\n                value={this.state.category}\n                onChange={this.handleChange}\n              >\n                <option defaultValue disabled>\n                  Category...\n                </option>\n                <option value=\"National\">National</option>\n                <option value=\"Home\">Home</option>\n                <option value=\"Live\">Live</option>\n              </select>\n            </div>\n            <div className=\"form-group mb-2\">\n              <input\n                type=\"number\"\n                step=\"0.01\"\n                placeholder=\"Size\"\n                className=\"form-control\"\n                name=\"size\"\n                value={this.state.size}\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n            <div className=\"form-group mb-2\">\n              <button className=\"btn btn-success\" type=\"submit\">\n                Save\n              </button>\n              <button\n                className=\"btn btn-warning mx-3\"\n                type=\"button\"\n                onClick={() => this.goBack()}\n              >\n                Back\n              </button>\n            </div>\n          </form>\n        </div>\n        <div>Add Performer</div>\n        <div className=\"form-group mb-8\">\n          <select\n            id=\"inlineFormCustomSelect\"\n            className=\"form-control\"\n            name=\"performer\"\n            value={this.state.performers}\n            onChange={this.handleChange}\n          >\n            <option defaultValue hidden>\n              Choose here\n            </option>\n            {this.availablePerformance()}\n          </select>\n          <button\n            className=\"btn btn-warning\"\n            onClick={() => this.onClickAddPerformer()}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default StudioUpdateForm;\n","import React from \"react\";\nimport { Route, BrowserRouter, Switch } from \"react-router-dom\";\n\nimport StudioContainer from \"../Studio/StudioContainer\";\nimport Navigation from \"./Navigation\";\nimport StudioDetails from \"../Studio/StudioDetails\";\nimport PerformerContainer from \"../Performer/PerformerContainer\";\nimport StudioUpdateForm from \"../Studio/StudioUpdateForm\";\n\nconst NavigationContainer = () => {\n  return (\n    <div>\n      <BrowserRouter>\n        <div>\n          <Navigation />\n          <Switch>\n            <Route path=\"/\" exact component={StudioContainer} />\n            <Route path=\"/studios/:title\" component={StudioDetails} exact />\n            <Route path=\"/performers\" component={PerformerContainer} exact />\n            <Route\n              path=\"/studios/update/:title\"\n              component={StudioUpdateForm}\n              exact\n            />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n};\n\nexport default NavigationContainer;\n","import React, { Component } from \"react\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n\nimport NavigationContainer from \"./components/navigation/NavigationContainer\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <NavigationContainer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}